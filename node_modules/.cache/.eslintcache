[{"/Users/lena_imkenova/Documents/GitHub/PI/src/index.js":"1","/Users/lena_imkenova/Documents/GitHub/PI/src/App.js":"2","/Users/lena_imkenova/Documents/GitHub/PI/src/reportWebVitals.js":"3","/Users/lena_imkenova/Documents/GitHub/PI/src/Header.js":"4","/Users/lena_imkenova/Documents/GitHub/PI/src/SubjectMenu.js":"5","/Users/lena_imkenova/Documents/GitHub/PI/src/SubjectContent.js":"6","/Users/lena_imkenova/Documents/GitHub/PI/src/AddSubjectModal.js":"7","/Users/lena_imkenova/Documents/GitHub/PI/src/ContextMenu.js":"8","/Users/lena_imkenova/Documents/GitHub/PI/src/Post.js":"9","/Users/lena_imkenova/Documents/GitHub/Demo/src/index.js":"10","/Users/lena_imkenova/Documents/GitHub/Demo/src/App.js":"11","/Users/lena_imkenova/Documents/GitHub/Demo/src/Header.js":"12","/Users/lena_imkenova/Documents/GitHub/Demo/src/SubjectMenu.js":"13","/Users/lena_imkenova/Documents/GitHub/Demo/src/SubjectContent.js":"14","/Users/lena_imkenova/Documents/GitHub/Demo/src/AddSubjectModal.js":"15","/Users/lena_imkenova/Documents/GitHub/Demo/src/ContextMenu.js":"16","/Users/lena_imkenova/Documents/GitHub/Demo/src/Post.js":"17","/Users/lena_imkenova/Documents/GitHub/Demo/src/reportWebVitals.js":"18"},{"size":478,"mtime":1634234047816,"results":"19","hashOfConfig":"20"},{"size":1315,"mtime":1634237140008,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1634234047816,"results":"22","hashOfConfig":"20"},{"size":917,"mtime":1634237140008,"results":"23","hashOfConfig":"20"},{"size":2537,"mtime":1634234047816,"results":"24","hashOfConfig":"20"},{"size":1739,"mtime":1634234047815,"results":"25","hashOfConfig":"20"},{"size":2109,"mtime":1634237140008,"results":"26","hashOfConfig":"20"},{"size":1442,"mtime":1634237140008,"results":"27","hashOfConfig":"20"},{"size":3503,"mtime":1634234047814,"results":"28","hashOfConfig":"20"},{"size":478,"mtime":1634249078245,"results":"29","hashOfConfig":"30"},{"size":1315,"mtime":1634249078240,"results":"31","hashOfConfig":"30"},{"size":898,"mtime":1634249078242,"results":"32","hashOfConfig":"30"},{"size":2537,"mtime":1634249078245,"results":"33","hashOfConfig":"30"},{"size":1739,"mtime":1634249078244,"results":"34","hashOfConfig":"30"},{"size":2109,"mtime":1634249078239,"results":"35","hashOfConfig":"30"},{"size":1442,"mtime":1634249078242,"results":"36","hashOfConfig":"30"},{"size":3503,"mtime":1634249078244,"results":"37","hashOfConfig":"30"},{"size":362,"mtime":1634255287367,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nk3fbn",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1swe5ej",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lena_imkenova/Documents/GitHub/PI/src/index.js",[],"/Users/lena_imkenova/Documents/GitHub/PI/src/App.js",[],"/Users/lena_imkenova/Documents/GitHub/PI/src/reportWebVitals.js",[],"/Users/lena_imkenova/Documents/GitHub/PI/src/Header.js",["81","82","83"],"/Users/lena_imkenova/Documents/GitHub/PI/src/SubjectMenu.js",["84","85"],"/Users/lena_imkenova/Documents/GitHub/PI/src/SubjectContent.js",["86","87","88","89","90"],"/Users/lena_imkenova/Documents/GitHub/PI/src/AddSubjectModal.js",[],"/Users/lena_imkenova/Documents/GitHub/PI/src/ContextMenu.js",["91"],"/Users/lena_imkenova/Documents/GitHub/PI/src/Post.js",["92","93","94","95","96","97","98"],"/Users/lena_imkenova/Documents/GitHub/Demo/src/index.js",[],["99","100"],"/Users/lena_imkenova/Documents/GitHub/Demo/src/App.js",[],"/Users/lena_imkenova/Documents/GitHub/Demo/src/Header.js",["101","102","103"],"import \"./Header.css\"\nimport Slide from 'react-reveal/Slide'\nimport {memo} from \"react\";\n\nfunction Header() {\n\n    let randomInfo = ['version', 'subjects', 'posts']\n    let userNotification\n\n   \n\n\n    return (\n        <Slide top>\n            <div className=\"row valign-wrapper\">\n                <div className=\"col s12 m12 l12 hide-on-med-and-up center-align\">\n                    <img src=\"logo.png\"/> <span className=\"logo-text blue-text\">ToDo </span>\n                </div>\n                <div className=\"col s12 m6 l6 left-align grey-text hide-on-small-only\">\n                    <img src=\"logo.png\"/> <span className=\"logo-text blue-text\">ToDo</span>\n                </div>\n                <div className=\"col s12 m6 l6 right-align hide-on-small-only grey-text\">\n                    {userNotification}\n                </div>\n            </div>\n        </Slide>)\n}\n\nexport default memo(Header)","/Users/lena_imkenova/Documents/GitHub/Demo/src/SubjectMenu.js",["104","105"],"import \"./SubjectMenu.css\"\nimport {useState} from \"react\";\nimport Slide from \"react-reveal/Slide\";\nimport AddSubjectModal from \"./AddSubjectModal\";\nimport ContextMenu from \"./ContextMenu\";\n\nfunction SubjectMenu(props) {\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const [contextMenuOpened, editContextMenuOpened] = useState(false)\n    const [contextMenuSelectedSubject, editContextMenuSelectedSubject] = useState(-1)\n    const [contextMenuPosition, editContextMenuPosition] = useState([0, 0])\n\n    let subjects = JSON.parse(localStorage['subjects'])\n    let renderedSubjects\n\n    function switchModal() {\n        setModalVisible(true)\n    }\n\n    function selectSubject(s) {\n        props.editSelectedSubject(s)\n    }\n\n    renderedSubjects = subjects.map((s, i) => {\n        if (s != null)\n            return (\n                <Slide right key={s.toString()}>\n                    <div className=\"card grey lighten-5 blue-text hoverable valign-wrapper\" onContextMenu={(e) => {\n                        e.preventDefault();\n                        editContextMenuSelectedSubject(i);\n                        editContextMenuPosition([e.clientX, e.clientY])\n                        editContextMenuOpened(true)\n                    }} onClick={() => {\n                        selectSubject(i)\n                    }}>\n                        <div\n                            className={`card-content center-align truncate ${props.selectedSubject == i ? 'active' : ''}`}>\n                            {s}\n                        </div>\n                    </div>\n                </Slide>\n            )\n    })\n\n    return (\n        <div>\n            <AddSubjectModal visible={modalVisible} changeVisibility={setModalVisible}/>\n            <ContextMenu opened={contextMenuOpened} editOpened={editContextMenuOpened}\n                         subject={contextMenuSelectedSubject} editSelectedSubject={props.editSelectedSubject}\n                         cursorPos={contextMenuPosition}\n            />\n            <div className=\"row left-align subjects-band\">\n                <Slide right>\n                    <div className=\"card blue white-text hoverable valign-wrapper\" onClick={switchModal}>\n                        <div className=\"card-content center-align\">\n                            <i className=\"material-icons medium white-text\">add</i>\n                        </div>\n                    </div>\n                </Slide>\n                {renderedSubjects}\n            </div>\n        </div>\n    )\n}\n\nexport default SubjectMenu","/Users/lena_imkenova/Documents/GitHub/Demo/src/SubjectContent.js",["106","107","108","109","110"],"import \"./SubjectContent.css\"\nimport Fade from \"react-reveal/Fade\";\nimport Post from \"./Post\";\nimport {useState} from \"react\";\n\nfunction SubjectContent(props) {\n\n    let postsToRender = ''\n\n    const [ticker, updateTick] = useState(0)\n\n    if (props.subject != -1) {\n        postsToRender = JSON.parse(localStorage['posts']).map((p, i) => {\n            if (p[0] == props.subject) {\n                return (\n                    <Post key={i.toString()} id={i} post={p} updater={updateTick} tick={ticker}/>\n                )\n            }\n        })\n    }\n\n    function addPost() {\n        localStorage['posts'] = JSON.stringify([[props.subject, new Date(), false, 'Новая запись']].concat(JSON.parse(localStorage['posts'])))\n        updateTick(ticker + 1)\n    }\n\n    if (props.subject == -1) {\n        return (\n            <Fade>\n                <div className={`row center-align grey-text notification`}>\n                    <div className={`col s12 m12 l12`}>\n                        <i className={`material-icons medium`}>edit</i>\n                        <h5>Выберите категорию</h5>\n                    </div>\n                </div>\n            </Fade>\n        )\n    } else {\n        return (\n            <div className={`row left-align`}>\n                <div className={`col s12 m12 l12`}>\n                    <ul className={`collection`}>\n                        <a onClick={addPost} className={`collection-item blue-text add-post-button`}><i\n                            className={`material-icons left blue-text`}>add</i> Новая запись</a>\n                        {postsToRender}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SubjectContent","/Users/lena_imkenova/Documents/GitHub/Demo/src/AddSubjectModal.js",[],"/Users/lena_imkenova/Documents/GitHub/Demo/src/ContextMenu.js",["111"],"import \"./ContextMenu.css\"\nimport Fade from \"react-reveal/Fade\";\n\nfunction ContextMenu(props) {\n\n    let style = {\n        left: props.cursorPos[0],\n        top: props.cursorPos[1]\n    }\n\n    function hideMenu() {\n        props.editOpened(false)\n    }\n\n    function removeNow(e) {\n        e.stopPropagation()\n\n        props.editSelectedSubject(-1)\n\n        let extraction = JSON.parse(localStorage['posts'])\n        extraction = extraction.filter((p) => parseInt(p[0]) !== parseInt(props.subject))\n        localStorage['posts'] = JSON.stringify(extraction)\n\n        extraction = JSON.parse(localStorage['subjects'])\n        extraction[props.subject] = null\n        localStorage['subjects'] = JSON.stringify(extraction)\n\n        props.editOpened(false)\n    }\n\n    if (props.opened)\n        return (\n            <Fade>\n                <div className={`menu-wrapper`} onClick={hideMenu} onContextMenu={(e) => e.preventDefault()}>\n                    <div className={`menu-container`} style={style}>\n                        <ul className={`collection`}>\n                            <a onClick={removeNow} className={`collection-item blue-text`}><i\n                                className={`material-icons red-text`}>delete</i> <span>Удалить категорию</span></a>\n                        </ul>\n                    </div>\n                </div>\n            </Fade>\n        )\n    else\n        return ''\n}\n\nexport default ContextMenu","/Users/lena_imkenova/Documents/GitHub/Demo/src/Post.js",["112","113","114","115","116","117","118"],"import \"./Post.css\"\nimport {useState} from \"react\";\n\nfunction Post(props){\n\n    const [postText, editPostText] = useState('')\n    const [editMode, switchEditMode] = useState(false)\n\n    let postDate = new Date(props.post[1])\n\n    let postDay = postDate.getDate().toString().length < 2 ? '0' + postDate.getDate().toString() : postDate.getDate().toString()\n    let postMonth = (postDate.getMonth() + 1).toString().length < 2 ? '0' + (postDate.getMonth() + 1).toString() : (postDate.getMonth() + 1).toString()\n    let postHour = postDate.getHours().toString().length < 2 ? '0' + postDate.getHours().toString() : postDate.getHours().toString()\n    let postMinute = postDate.getMinutes().toString().length < 2 ? '0' + postDate.getMinutes().toString() : postDate.getMinutes().toString()\n\n    let dateRender = postDay + '.' + postMonth + '.' + postDate.getFullYear() + ' ' + postHour + ':' + postMinute\n\n    let postStatus = ''\n\n    if (props.post[2].toString() == \"true\"){\n        postStatus = <div className={`green-text valign-wrapper`}><i className={`material-icons done`}>done</i>Завершено</div>\n    }\n\n    function removePost(){\n        let extraction = JSON.parse(localStorage['posts'])\n        extraction = extraction.filter((p, i) => i != props.id)\n        localStorage['posts'] = JSON.stringify(extraction)\n        props.updater(props.tick + 1)\n    }\n\n    function editPost(){\n        if (editMode){\n            let extraction = JSON.parse(localStorage['posts'])\n            extraction[props.id][3] = postText\n            localStorage['posts'] = JSON.stringify(extraction)\n            props.updater(props.tick + 1)\n        }\n        switchEditMode(!editMode)\n    }\n\n    function markAsDone(){\n        let extraction = JSON.parse(localStorage['posts'])\n        extraction[props.id][2] = extraction[props.id][2].toString() == 'true' ? 'false' : 'true'\n        localStorage['posts'] = JSON.stringify(extraction)\n        props.updater(props.tick + 1)\n    }\n\n    function enterTextareaHandling(e){\n        if (e.key == 'Enter'){\n            e.preventDefault()\n            editPost()\n        }\n    }\n\n    return (\n        <li className={`collection-item black-text ${props.post[2].toString() == \"true\" ? 'grey lighten-2' : ''}`}>\n            <div className={`post-container`}>\n                <div className={`post-text ${props.post[2].toString() == \"false\" ? 'black-text' : 'grey-text'} left-align`}>\n                    {editMode && <textarea autoFocus onFocus={(e) => {editPostText(e.target.value)}} onChange={(e)=>{editPostText(e.target.value)}} onKeyDown={enterTextareaHandling} defaultValue={props.post[3]}></textarea>}\n                    {!editMode && postStatus}\n                    {!editMode && props.post[3]}\n                </div>\n                <div className={`post-actions grey-text`}>\n                    <div className={`post-date`}>\n                        {dateRender}\n                    </div>\n                    <div className={`post-btns right-align`}>\n                        <span onClick={markAsDone} className={`blue-text`}>{props.post[2].toString() == 'true' ? 'Снять метку' : 'Отметить'}</span>\n                        <span onClick={editPost} className={`blue-text`}>{editMode ? 'Сохранить' : 'Редактировать'}</span>\n                        <span onClick={removePost} className={`red-text`}>Удалить</span>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Post","/Users/lena_imkenova/Documents/GitHub/Demo/src/reportWebVitals.js",[],{"ruleId":"119","severity":1,"message":"120","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":17,"column":21,"nodeType":"125","endLine":17,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":20,"column":21,"nodeType":"125","endLine":20,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":25,"column":44,"nodeType":"128","messageId":"129","endLine":25,"endColumn":46},{"ruleId":"130","severity":1,"message":"131","line":38,"column":100,"nodeType":"132","messageId":"133","endLine":38,"endColumn":102},{"ruleId":"130","severity":1,"message":"134","line":12,"column":23,"nodeType":"132","messageId":"133","endLine":12,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":13,"column":70,"nodeType":"128","messageId":"129","endLine":13,"endColumn":72},{"ruleId":"130","severity":1,"message":"131","line":14,"column":22,"nodeType":"132","messageId":"133","endLine":14,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":27,"column":23,"nodeType":"132","messageId":"133","endLine":27,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":43,"column":25,"nodeType":"125","endLine":43,"endColumn":102},{"ruleId":"135","severity":1,"message":"136","line":37,"column":29,"nodeType":"125","endLine":37,"endColumn":92},{"ruleId":"130","severity":1,"message":"131","line":20,"column":34,"nodeType":"132","messageId":"133","endLine":20,"endColumn":36},{"ruleId":"130","severity":1,"message":"134","line":26,"column":52,"nodeType":"132","messageId":"133","endLine":26,"endColumn":54},{"ruleId":"130","severity":1,"message":"131","line":43,"column":70,"nodeType":"132","messageId":"133","endLine":43,"endColumn":72},{"ruleId":"130","severity":1,"message":"131","line":49,"column":19,"nodeType":"132","messageId":"133","endLine":49,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":56,"column":79,"nodeType":"132","messageId":"133","endLine":56,"endColumn":81},{"ruleId":"130","severity":1,"message":"131","line":58,"column":71,"nodeType":"132","messageId":"133","endLine":58,"endColumn":73},{"ruleId":"130","severity":1,"message":"131","line":68,"column":102,"nodeType":"132","messageId":"133","endLine":68,"endColumn":104},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"119","severity":1,"message":"120","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":17,"column":21,"nodeType":"125","endLine":17,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":20,"column":21,"nodeType":"125","endLine":20,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":25,"column":44,"nodeType":"128","messageId":"129","endLine":25,"endColumn":46},{"ruleId":"130","severity":1,"message":"131","line":38,"column":100,"nodeType":"132","messageId":"133","endLine":38,"endColumn":102},{"ruleId":"130","severity":1,"message":"134","line":12,"column":23,"nodeType":"132","messageId":"133","endLine":12,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":13,"column":70,"nodeType":"128","messageId":"129","endLine":13,"endColumn":72},{"ruleId":"130","severity":1,"message":"131","line":14,"column":22,"nodeType":"132","messageId":"133","endLine":14,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":27,"column":23,"nodeType":"132","messageId":"133","endLine":27,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":43,"column":25,"nodeType":"125","endLine":43,"endColumn":102},{"ruleId":"135","severity":1,"message":"136","line":37,"column":29,"nodeType":"125","endLine":37,"endColumn":92},{"ruleId":"130","severity":1,"message":"131","line":20,"column":34,"nodeType":"132","messageId":"133","endLine":20,"endColumn":36},{"ruleId":"130","severity":1,"message":"134","line":26,"column":52,"nodeType":"132","messageId":"133","endLine":26,"endColumn":54},{"ruleId":"130","severity":1,"message":"131","line":43,"column":70,"nodeType":"132","messageId":"133","endLine":43,"endColumn":72},{"ruleId":"130","severity":1,"message":"131","line":49,"column":19,"nodeType":"132","messageId":"133","endLine":49,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":56,"column":79,"nodeType":"132","messageId":"133","endLine":56,"endColumn":81},{"ruleId":"130","severity":1,"message":"131","line":58,"column":71,"nodeType":"132","messageId":"133","endLine":58,"endColumn":73},{"ruleId":"130","severity":1,"message":"131","line":68,"column":102,"nodeType":"132","messageId":"133","endLine":68,"endColumn":104},"no-unused-vars","'randomInfo' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-global-assign","no-unsafe-negation"]